import type { Metadata } from "next";
import { cookies } from "next/headers";
import { config } from "@fortawesome/fontawesome-svg-core";
import { Open_Sans, Cairo } from "next/font/google";
import "./globals.css";
import "@/styles/Home.scss";
import "@fortawesome/fontawesome-svg-core/styles.css";
import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
import ThemeRegister from "@/components/providers/ThemeRegister";
import { notFound } from "next/navigation";
config.autoAddCss = false;

const open_sans = Open_Sans({
  subsets: ["latin"],
  adjustFontFallback: false,
  display: "swap",
});

const cairo = Cairo({
  subsets: ["arabic"],
  adjustFontFallback: false,
  display: "swap",
});

export const metadata: Metadata = {
  title: "E-commerce",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: any;
}>) {
  const cookie = cookies();
  const themeCookie = cookie.get("theme")?.value || "light";
  const locale = await getLocale();
  const messages = await getMessages();

  if (params.locale !== locale) {
    notFound();
  }

  return (
    <html
      style={{ overflowY: "auto", height: "100%" }}
      dir={locale !== "ar" ? "ltr" : "rtl"}
      lang={locale}
      suppressHydrationWarning
    >
      <body
        data-theme={themeCookie}
        style={{
          fontFamily: [open_sans.style.fontFamily, cairo.style.fontFamily].join(
            ", "
          ),
          height: "100%",
        }}
        className="body"
      >
        <NextIntlClientProvider messages={messages}>
          <ThemeRegister>{children}</ThemeRegister>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
